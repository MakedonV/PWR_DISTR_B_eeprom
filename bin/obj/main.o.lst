   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              		.section	.text.supporting_driver_init,"ax",%progbits
  16              		.align	1
  17              		.global	supporting_driver_init
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	supporting_driver_init:
  25              		@ args = 0, pretend = 0, frame = 0
  26              		@ frame_needed = 0, uses_anonymous_args = 0
  27 0000 00B5     		push	{lr}
  28 0002 83B0     		sub	sp, sp, #12
  29 0004 0223     		movs	r3, #2
  30 0006 0093     		str	r3, [sp]
  31 0008 044B     		ldr	r3, .L3
  32 000a 054A     		ldr	r2, .L3+4
  33 000c 0549     		ldr	r1, .L3+8
  34 000e 0648     		ldr	r0, .L3+12
  35 0010 FFF7FEFF 		bl	EDMA_DRV_Init
  36 0014 03B0     		add	sp, sp, #12
  37              		@ sp needed
  38 0016 5DF804FB 		ldr	pc, [sp], #4
  39              	.L4:
  40 001a 00BF     		.align	2
  41              	.L3:
  42 001c 00000000 		.word	edmaChnConfigArray
  43 0020 00000000 		.word	edmaChnStateArray
  44 0024 00000000 		.word	dmaController1_InitConfig0
  45 0028 00000000 		.word	dmaController1_State
  47              		.section	.text.main,"ax",%progbits
  48              		.align	1
  49              		.global	main
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  53              		.fpu fpv4-sp-d16
  55              	main:
  56              		@ args = 0, pretend = 0, frame = 8
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  59 0002 83B0     		sub	sp, sp, #12
  60 0004 0023     		movs	r3, #0
  61 0006 2B4A     		ldr	r2, .L9
  62 0008 0121     		movs	r1, #1
  63 000a 2B48     		ldr	r0, .L9+4
  64 000c FFF7FEFF 		bl	CLOCK_SYS_Init
  65 0010 0021     		movs	r1, #0
  66 0012 0846     		mov	r0, r1
  67 0014 FFF7FEFF 		bl	CLOCK_SYS_UpdateConfiguration
  68 0018 7A20     		movs	r0, #122
  69 001a FFF7FEFF 		bl	hal_io_init
  70 001e FFF7FEFF 		bl	sfl_bl_protocol_s32k_init
  71 0022 FFF7FEFF 		bl	supporting_driver_init
  72 0026 FFF7FEFF 		bl	hal_tick_init
  73 002a 0025     		movs	r5, #0
  74 002c 0095     		str	r5, [sp]
  75 002e FFF7FEFF 		bl	hal_nvm_init
  76 0032 FFF7FEFF 		bl	ADC_init
  77 0036 1620     		movs	r0, #22
  78 0038 FFF7FEFF 		bl	hal_pwm_init
  79 003c 1F20     		movs	r0, #31
  80 003e FFF7FEFF 		bl	hal_freq_init
  81 0042 FFF7FEFF 		bl	irq_priority_set_all_predefined
  82 0046 FFF7FEFF 		bl	lin_init_all
  83 004a FFF7FEFF 		bl	modulhardwarecode_init
  84 004e 1B48     		ldr	r0, .L9+8
  85 0050 FFF7FEFF 		bl	set_callback_timer_1ms
  86 0054 1A48     		ldr	r0, .L9+12
  87 0056 FFF7FEFF 		bl	set_callback_can_msg_receive
  88 005a 0121     		movs	r1, #1
  89 005c 0DF10700 		add	r0, sp, #7
  90 0060 FFF7FEFF 		bl	adc_processing
  91 0064 FFF7FEFF 		bl	usercode_init
  92 0068 FFF7FEFF 		bl	graphcode_init
  93 006c 154F     		ldr	r7, .L9+16
  94 006e 164E     		ldr	r6, .L9+20
  95 0070 01E0     		b	.L7
  96              	.L6:
  97 0072 FFF7FEFF 		bl	sfl_can_db_output_to_bus
  98              	.L7:
  99 0076 3846     		mov	r0, r7
 100 0078 FFF7FEFF 		bl	hal_watchdog_signal
 101 007c 0321     		movs	r1, #3
 102 007e 6846     		mov	r0, sp
 103 0080 FFF7FEFF 		bl	hal_get_timestamp
 104 0084 FFF7FEFF 		bl	sfl_bl_protocol_s32k_cyclic
 105 0088 0121     		movs	r1, #1
 106 008a 0DF10700 		add	r0, sp, #7
 107 008e FFF7FEFF 		bl	adc_processing
 108 0092 FFF7FEFF 		bl	sfl_can_queue_in_process
 109 0096 FFF7FEFF 		bl	lin_cyclic
 110 009a FFF7FEFF 		bl	modulhardwarecode_cyclic
 111 009e 009C     		ldr	r4, [sp]
 112 00a0 621B     		subs	r2, r4, r5
 113 00a2 3388     		ldrh	r3, [r6]
 114 00a4 9A42     		cmp	r2, r3
 115 00a6 E4D3     		bcc	.L6
 116 00a8 FFF7FEFF 		bl	usercode
 117 00ac FFF7FEFF 		bl	graphcode
 118 00b0 2546     		mov	r5, r4
 119 00b2 DEE7     		b	.L6
 120              	.L10:
 121              		.align	2
 122              	.L9:
 123 00b4 00000000 		.word	g_clockManCallbacksArr
 124 00b8 00000000 		.word	g_clockManConfigsArr
 125 00bc 00000000 		.word	user_int_timer_1ms
 126 00c0 00000000 		.word	user_can_receive_msg_callback
 127 00c4 01000080 		.word	-2147483647
 128 00c8 00000000 		.word	ext_graph_cycle_time
 130              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 8-2019-q3-update) 8.3.1 20190703 (release) [gc
