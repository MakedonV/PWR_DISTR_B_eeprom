   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"can_app.c"
  14              		.text
  15              		.section	.text.CAN_Callback,"ax",%progbits
  16              		.align	1
  17              		.global	CAN_Callback
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	CAN_Callback:
  25              		@ args = 0, pretend = 0, frame = 88
  26              		@ frame_needed = 0, uses_anonymous_args = 0
  27 0000 10B5     		push	{r4, lr}
  28 0002 96B0     		sub	sp, sp, #88
  29 0004 0446     		mov	r4, r0
  30 0006 14A8     		add	r0, sp, #80
  31 0008 1390     		str	r0, [sp, #76]
  32 000a 0194     		str	r4, [sp, #4]
  33 000c 0292     		str	r2, [sp, #8]
  34 000e 31B1     		cbz	r1, .L2
  35 0010 0429     		cmp	r1, #4
  36 0012 02D1     		bne	.L1
  37 0014 2046     		mov	r0, r4
  38 0016 FFF7FEFF 		bl	sfl_can_db_tx_callback
  39              	.L1:
  40 001a 16B0     		add	sp, sp, #88
  41              		@ sp needed
  42 001c 10BD     		pop	{r4, pc}
  43              	.L2:
  44 001e 1946     		mov	r1, r3
  45 0020 1046     		mov	r0, r2
  46 0022 FFF7FEFF 		bl	sfl_bl_protocol_s32k_is_msg_for_bl
  47 0026 0328     		cmp	r0, #3
  48 0028 F7D1     		bne	.L1
  49 002a 11A9     		add	r1, sp, #68
  50 002c 6846     		mov	r0, sp
  51 002e FFF7FEFF 		bl	hal_can_receive
  52 0032 11A9     		add	r1, sp, #68
  53 0034 2046     		mov	r0, r4
  54 0036 FFF7FEFF 		bl	sfl_can_db_rx_wrapper
  55 003a EEE7     		b	.L1
  57              		.section	.text.CAN2_Callback,"ax",%progbits
  58              		.align	1
  59              		.global	CAN2_Callback
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv4-sp-d16
  65              	CAN2_Callback:
  66              		@ args = 0, pretend = 0, frame = 88
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68 0000 10B5     		push	{r4, lr}
  69 0002 96B0     		sub	sp, sp, #88
  70 0004 0446     		mov	r4, r0
  71 0006 14A8     		add	r0, sp, #80
  72 0008 1390     		str	r0, [sp, #76]
  73 000a 0194     		str	r4, [sp, #4]
  74 000c 0292     		str	r2, [sp, #8]
  75 000e 31B1     		cbz	r1, .L6
  76 0010 0429     		cmp	r1, #4
  77 0012 02D1     		bne	.L5
  78 0014 2046     		mov	r0, r4
  79 0016 FFF7FEFF 		bl	sfl_can_db_tx_callback
  80              	.L5:
  81 001a 16B0     		add	sp, sp, #88
  82              		@ sp needed
  83 001c 10BD     		pop	{r4, pc}
  84              	.L6:
  85 001e 1946     		mov	r1, r3
  86 0020 1046     		mov	r0, r2
  87 0022 FFF7FEFF 		bl	sfl_bl_protocol_s32k_is_msg_for_bl
  88 0026 0328     		cmp	r0, #3
  89 0028 F7D1     		bne	.L5
  90 002a 11A9     		add	r1, sp, #68
  91 002c 6846     		mov	r0, sp
  92 002e FFF7FEFF 		bl	hal_can_receive
  93 0032 11A9     		add	r1, sp, #68
  94 0034 2046     		mov	r0, r4
  95 0036 FFF7FEFF 		bl	sfl_can_db_rx_wrapper
  96 003a EEE7     		b	.L5
  98              		.section	.text.CAN3_Callback,"ax",%progbits
  99              		.align	1
 100              		.global	CAN3_Callback
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu fpv4-sp-d16
 106              	CAN3_Callback:
 107              		@ args = 0, pretend = 0, frame = 88
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109 0000 10B5     		push	{r4, lr}
 110 0002 96B0     		sub	sp, sp, #88
 111 0004 0446     		mov	r4, r0
 112 0006 14A8     		add	r0, sp, #80
 113 0008 1390     		str	r0, [sp, #76]
 114 000a 0194     		str	r4, [sp, #4]
 115 000c 0292     		str	r2, [sp, #8]
 116 000e 31B1     		cbz	r1, .L10
 117 0010 0429     		cmp	r1, #4
 118 0012 02D1     		bne	.L9
 119 0014 2046     		mov	r0, r4
 120 0016 FFF7FEFF 		bl	sfl_can_db_tx_callback
 121              	.L9:
 122 001a 16B0     		add	sp, sp, #88
 123              		@ sp needed
 124 001c 10BD     		pop	{r4, pc}
 125              	.L10:
 126 001e 1946     		mov	r1, r3
 127 0020 1046     		mov	r0, r2
 128 0022 FFF7FEFF 		bl	sfl_bl_protocol_s32k_is_msg_for_bl
 129 0026 0328     		cmp	r0, #3
 130 0028 F7D1     		bne	.L9
 131 002a 11A9     		add	r1, sp, #68
 132 002c 6846     		mov	r0, sp
 133 002e FFF7FEFF 		bl	hal_can_receive
 134 0032 11A9     		add	r1, sp, #68
 135 0034 2046     		mov	r0, r4
 136 0036 FFF7FEFF 		bl	sfl_can_db_rx_wrapper
 137 003a EEE7     		b	.L9
 139              		.section	.text.CAN_Callback_Error,"ax",%progbits
 140              		.align	1
 141              		.global	CAN_Callback_Error
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	CAN_Callback_Error:
 148              		@ args = 0, pretend = 0, frame = 16
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150 0000 0A29     		cmp	r1, #10
 151 0002 00D0     		beq	.L28
 152 0004 7047     		bx	lr
 153              	.L28:
 154 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 155 000a 84B0     		sub	sp, sp, #16
 156 000c 0446     		mov	r4, r0
 157 000e FFF7FEFF 		bl	FLEXCAN_DRV_GetErrorStatus
 158 0012 0646     		mov	r6, r0
 159 0014 2D4B     		ldr	r3, .L30
 160 0016 1842     		tst	r0, r3
 161 0018 02D1     		bne	.L29
 162              	.L13:
 163 001a 04B0     		add	sp, sp, #16
 164              		@ sp needed
 165 001c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 166              	.L29:
 167 0020 2B48     		ldr	r0, .L30+4
 168 0022 00EBC400 		add	r0, r0, r4, lsl #3
 169 0026 4660     		str	r6, [r0, #4]
 170 0028 0321     		movs	r1, #3
 171 002a FFF7FEFF 		bl	hal_get_timestamp
 172 002e 16F0400F 		tst	r6, #64
 173 0032 1DD0     		beq	.L15
 174 0034 274B     		ldr	r3, .L30+8
 175 0036 03EB0413 		add	r3, r3, r4, lsl #4
 176 003a 9B68     		ldr	r3, [r3, #8]
 177 003c 1B68     		ldr	r3, [r3]
 178 003e 042B     		cmp	r3, #4
 179 0040 16D9     		bls	.L15
 180 0042 0425     		movs	r5, #4
 181 0044 234B     		ldr	r3, .L30+8
 182 0046 03EB0418 		add	r8, r3, r4, lsl #4
 183 004a 05E0     		b	.L17
 184              	.L16:
 185 004c 0135     		adds	r5, r5, #1
 186 004e D8F80830 		ldr	r3, [r8, #8]
 187 0052 1B68     		ldr	r3, [r3]
 188 0054 AB42     		cmp	r3, r5
 189 0056 0BD9     		bls	.L15
 190              	.L17:
 191 0058 EFB2     		uxtb	r7, r5
 192 005a 3946     		mov	r1, r7
 193 005c 2046     		mov	r0, r4
 194 005e FFF7FEFF 		bl	FLEXCAN_DRV_GetTransferStatus
 195 0062 0028     		cmp	r0, #0
 196 0064 F2D0     		beq	.L16
 197 0066 3946     		mov	r1, r7
 198 0068 2046     		mov	r0, r4
 199 006a FFF7FEFF 		bl	FLEXCAN_DRV_AbortTransfer
 200 006e EDE7     		b	.L16
 201              	.L15:
 202 0070 16F0080F 		tst	r6, #8
 203 0074 14D0     		beq	.L18
 204 0076 0025     		movs	r5, #0
 205 0078 02E0     		b	.L20
 206              	.L19:
 207 007a 0135     		adds	r5, r5, #1
 208 007c 032D     		cmp	r5, #3
 209 007e 0FD0     		beq	.L18
 210              	.L20:
 211 0080 EFB2     		uxtb	r7, r5
 212 0082 3946     		mov	r1, r7
 213 0084 2046     		mov	r0, r4
 214 0086 FFF7FEFF 		bl	FLEXCAN_DRV_GetTransferStatus
 215 008a 0028     		cmp	r0, #0
 216 008c F5D0     		beq	.L19
 217 008e 3946     		mov	r1, r7
 218 0090 2046     		mov	r0, r4
 219 0092 FFF7FEFF 		bl	FLEXCAN_DRV_AbortTransfer
 220 0096 2946     		mov	r1, r5
 221 0098 2046     		mov	r0, r4
 222 009a FFF7FEFF 		bl	sfl_can_rx_int_enable
 223 009e ECE7     		b	.L19
 224              	.L18:
 225 00a0 0D4B     		ldr	r3, .L30+12
 226 00a2 93E80700 		ldm	r3, {r0, r1, r2}
 227 00a6 04AB     		add	r3, sp, #16
 228 00a8 03E90700 		stmdb	r3, {r0, r1, r2}
 229 00ac 03EB8400 		add	r0, r3, r4, lsl #2
 230 00b0 50F80C4C 		ldr	r4, [r0, #-12]
 231 00b4 2046     		mov	r0, r4
 232 00b6 FFF7FEFF 		bl	FLEXCAN_ClearErrIntStatusFlag
 233 00ba 16F4001F 		tst	r6, #2097152
 234 00be ACD0     		beq	.L13
 235 00c0 236A     		ldr	r3, [r4, #32]
 236 00c2 43F40013 		orr	r3, r3, #2097152
 237 00c6 2362     		str	r3, [r4, #32]
 238 00c8 A7E7     		b	.L13
 239              	.L31:
 240 00ca 00BF     		.align	2
 241              	.L30:
 242 00cc 00FC2000 		.word	2161664
 243 00d0 00000000 		.word	can_error_handle
 244 00d4 00000000 		.word	struct_can_config_tbl
 245 00d8 00000000 		.word	.LANCHOR0
 247              		.section	.text.user_can_set_baudrate,"ax",%progbits
 248              		.align	1
 249              		.global	user_can_set_baudrate
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv4-sp-d16
 255              	user_can_set_baudrate:
 256              		@ args = 44, pretend = 8, frame = 72
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 82B0     		sub	sp, sp, #8
 259 0002 30B5     		push	{r4, r5, lr}
 260 0004 93B0     		sub	sp, sp, #76
 261 0006 0C46     		mov	r4, r1
 262 0008 1546     		mov	r5, r2
 263 000a 1793     		str	r3, [sp, #92]
 264 000c 01A9     		add	r1, sp, #4
 265 000e FFF7FEFF 		bl	sfl_can_get_handle
 266 0012 1B9B     		ldr	r3, [sp, #108]
 267 0014 0B93     		str	r3, [sp, #44]
 268 0016 189B     		ldr	r3, [sp, #96]
 269 0018 0893     		str	r3, [sp, #32]
 270 001a 199B     		ldr	r3, [sp, #100]
 271 001c 0993     		str	r3, [sp, #36]
 272 001e 1A9B     		ldr	r3, [sp, #104]
 273 0020 0A93     		str	r3, [sp, #40]
 274 0022 179B     		ldr	r3, [sp, #92]
 275 0024 0793     		str	r3, [sp, #28]
 276 0026 209B     		ldr	r3, [sp, #128]
 277 0028 1093     		str	r3, [sp, #64]
 278 002a 1D9B     		ldr	r3, [sp, #116]
 279 002c 0D93     		str	r3, [sp, #52]
 280 002e 1E9B     		ldr	r3, [sp, #120]
 281 0030 0E93     		str	r3, [sp, #56]
 282 0032 1F9B     		ldr	r3, [sp, #124]
 283 0034 0F93     		str	r3, [sp, #60]
 284 0036 1C9B     		ldr	r3, [sp, #112]
 285 0038 0C93     		str	r3, [sp, #48]
 286 003a 9CB1     		cbz	r4, .L33
 287 003c 0D23     		movs	r3, #13
 288 003e 8DF81030 		strb	r3, [sp, #16]
 289 0042 8DF81130 		strb	r3, [sp, #17]
 290              	.L34:
 291 0046 9DF81010 		ldrb	r1, [sp, #16]	@ zero_extendqisi2
 292 004a 01A8     		add	r0, sp, #4
 293 004c FFF7FEFF 		bl	hal_can_set_baudrate
 294 0050 9DF81110 		ldrb	r1, [sp, #17]	@ zero_extendqisi2
 295 0054 01A8     		add	r0, sp, #4
 296 0056 FFF7FEFF 		bl	hal_can_set_fd_data_baudrate
 297 005a 13B0     		add	sp, sp, #76
 298              		@ sp needed
 299 005c BDE83040 		pop	{r4, r5, lr}
 300 0060 02B0     		add	sp, sp, #8
 301 0062 7047     		bx	lr
 302              	.L33:
 303 0064 6B1E     		subs	r3, r5, #1
 304 0066 DBB2     		uxtb	r3, r3
 305 0068 0A2B     		cmp	r3, #10
 306 006a 92BF     		itee	ls
 307 006c 8DF81050 		strbls	r5, [sp, #16]
 308 0070 0C23     		movhi	r3, #12
 309 0072 8DF81030 		strbhi	r3, [sp, #16]
 310 0076 0023     		movs	r3, #0
 311 0078 8DF81130 		strb	r3, [sp, #17]
 312 007c E3E7     		b	.L34
 314              		.section	.text.user_can_fd_calculate_baudrate,"ax",%progbits
 315              		.align	1
 316              		.global	user_can_fd_calculate_baudrate
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu fpv4-sp-d16
 322              	user_can_fd_calculate_baudrate:
 323              		@ args = 8, pretend = 0, frame = 104
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 326 0002 9BB0     		sub	sp, sp, #108
 327 0004 209C     		ldr	r4, [sp, #128]
 328 0006 219D     		ldr	r5, [sp, #132]
 329 0008 0126     		movs	r6, #1
 330 000a 8DF84460 		strb	r6, [sp, #68]
 331 000e 1390     		str	r0, [sp, #76]
 332 0010 1492     		str	r2, [sp, #80]
 333 0012 234A     		ldr	r2, .L42
 334 0014 1292     		str	r2, [sp, #72]
 335 0016 8DF85410 		strb	r1, [sp, #84]
 336 001a 8DF85530 		strb	r3, [sp, #85]
 337 001e 12A8     		add	r0, sp, #72
 338 0020 FFF7FEFF 		bl	calculate_can_baudrate
 339 0024 0022     		movs	r2, #0
 340 0026 0DF15601 		add	r1, sp, #86
 341 002a 07A8     		add	r0, sp, #28
 342 002c FFF7FEFF 		bl	set_can_baudrate_timing
 343 0030 3246     		mov	r2, r6
 344 0032 0DF15F01 		add	r1, sp, #95
 345 0036 0CA8     		add	r0, sp, #48
 346 0038 FFF7FEFF 		bl	set_can_baudrate_timing
 347 003c 0346     		mov	r3, r0
 348 003e 0028     		cmp	r0, #0
 349 0040 29D1     		bne	.L37
 350 0042 0B9A     		ldr	r2, [sp, #44]
 351 0044 2261     		str	r2, [r4, #16]
 352 0046 089A     		ldr	r2, [sp, #32]
 353 0048 6260     		str	r2, [r4, #4]
 354 004a 099A     		ldr	r2, [sp, #36]
 355 004c A260     		str	r2, [r4, #8]
 356 004e 0A9A     		ldr	r2, [sp, #40]
 357 0050 E260     		str	r2, [r4, #12]
 358 0052 079A     		ldr	r2, [sp, #28]
 359 0054 2260     		str	r2, [r4]
 360 0056 109A     		ldr	r2, [sp, #64]
 361 0058 2A61     		str	r2, [r5, #16]
 362 005a DDF834C0 		ldr	ip, [sp, #52]
 363 005e C5F804C0 		str	ip, [r5, #4]
 364 0062 0E9F     		ldr	r7, [sp, #56]
 365 0064 AF60     		str	r7, [r5, #8]
 366 0066 0F9E     		ldr	r6, [sp, #60]
 367 0068 EE60     		str	r6, [r5, #12]
 368 006a 0C98     		ldr	r0, [sp, #48]
 369 006c 2860     		str	r0, [r5]
 370 006e 2169     		ldr	r1, [r4, #16]
 371 0070 89B9     		cbnz	r1, .L37
 372 0072 6368     		ldr	r3, [r4, #4]
 373 0074 73B9     		cbnz	r3, .L39
 374 0076 A168     		ldr	r1, [r4, #8]
 375 0078 69B9     		cbnz	r1, .L37
 376 007a E368     		ldr	r3, [r4, #12]
 377 007c 73B9     		cbnz	r3, .L40
 378 007e 42EA0C03 		orr	r3, r2, ip
 379 0082 3B43     		orrs	r3, r3, r7
 380 0084 3343     		orrs	r3, r3, r6
 381 0086 0343     		orrs	r3, r3, r0
 382 0088 2268     		ldr	r2, [r4]
 383 008a 1343     		orrs	r3, r3, r2
 384 008c 0CBF     		ite	eq
 385 008e 0123     		moveq	r3, #1
 386 0090 0023     		movne	r3, #0
 387 0092 00E0     		b	.L37
 388              	.L39:
 389 0094 0B46     		mov	r3, r1
 390              	.L37:
 391 0096 1846     		mov	r0, r3
 392 0098 1BB0     		add	sp, sp, #108
 393              		@ sp needed
 394 009a F0BD     		pop	{r4, r5, r6, r7, pc}
 395              	.L40:
 396 009c 0B46     		mov	r3, r1
 397 009e FAE7     		b	.L37
 398              	.L43:
 399              		.align	2
 400              	.L42:
 401 00a0 00B4C404 		.word	80000000
 403              		.section	.text.ext_get_filter_and_mask,"ax",%progbits
 404              		.align	1
 405              		.global	ext_get_filter_and_mask
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu fpv4-sp-d16
 411              	ext_get_filter_and_mask:
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415 0000 0023     		movs	r3, #0
 416 0002 4361     		str	r3, [r0, #20]
 417 0004 8361     		str	r3, [r0, #24]
 418 0006 C361     		str	r3, [r0, #28]
 419 0008 0362     		str	r3, [r0, #32]
 420 000a 0422     		movs	r2, #4
 421 000c 80F82420 		strb	r2, [r0, #36]
 422 0010 0360     		str	r3, [r0]
 423 0012 4360     		str	r3, [r0, #4]
 424 0014 8360     		str	r3, [r0, #8]
 425 0016 C360     		str	r3, [r0, #12]
 426 0018 0274     		strb	r2, [r0, #16]
 427 001a 7047     		bx	lr
 429              		.section	.text.user_can_init,"ax",%progbits
 430              		.align	1
 431              		.global	user_can_init
 432              		.syntax unified
 433              		.thumb
 434              		.thumb_func
 435              		.fpu fpv4-sp-d16
 437              	user_can_init:
 438              		@ args = 0, pretend = 0, frame = 176
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 441 0004 C5B0     		sub	sp, sp, #276
 442 0006 0746     		mov	r7, r0
 443 0008 724B     		ldr	r3, .L61
 444 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 445 000c 3BB9     		cbnz	r3, .L59
 446              	.L46:
 447 000e 22AD     		add	r5, sp, #136
 448 0010 0024     		movs	r4, #0
 449 0012 714E     		ldr	r6, .L61+4
 450 0014 DFF8CC81 		ldr	r8, .L61+16
 451 0018 DFF8CC91 		ldr	r9, .L61+20
 452 001c 7EE0     		b	.L54
 453              	.L59:
 454 001e 0024     		movs	r4, #0
 455 0020 6C4B     		ldr	r3, .L61
 456 0022 1C70     		strb	r4, [r3]
 457 0024 FFF7FEFF 		bl	sfl_can_db_tables_data_init
 458 0028 FFF7FEFF 		bl	sfl_can_db_fifo_init
 459 002c 18A8     		add	r0, sp, #96
 460 002e FFF7FEFF 		bl	ext_get_filter_and_mask
 461 0032 18A8     		add	r0, sp, #96
 462 0034 FFF7FEFF 		bl	sfl_can_db_init
 463 0038 22A9     		add	r1, sp, #136
 464 003a 2046     		mov	r0, r4
 465 003c FFF7FEFF 		bl	sfl_can_get_handle
 466 0040 654C     		ldr	r4, .L61+4
 467 0042 0DAE     		add	r6, sp, #52
 468 0044 04F1200C 		add	ip, r4, #32
 469              	.L47:
 470 0048 3546     		mov	r5, r6
 471 004a 2068     		ldr	r0, [r4]	@ unaligned
 472 004c 6168     		ldr	r1, [r4, #4]	@ unaligned
 473 004e A268     		ldr	r2, [r4, #8]	@ unaligned
 474 0050 E368     		ldr	r3, [r4, #12]	@ unaligned
 475 0052 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 476 0054 1034     		adds	r4, r4, #16
 477 0056 2E46     		mov	r6, r5
 478 0058 6445     		cmp	r4, ip
 479 005a F5D1     		bne	.L47
 480 005c 2068     		ldr	r0, [r4]	@ unaligned
 481 005e 2860     		str	r0, [r5]
 482 0060 A288     		ldrh	r2, [r4, #4]	@ unaligned
 483 0062 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 484 0064 AA80     		strh	r2, [r5, #4]	@ unaligned
 485 0066 AB71     		strb	r3, [r5, #6]
 486 0068 6C46     		mov	r4, sp
 487 006a 26AD     		add	r5, sp, #152
 488 006c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 489 006e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 490 0070 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 491 0072 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 492 0074 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 493 0076 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 494 0078 2B68     		ldr	r3, [r5]
 495 007a 2360     		str	r3, [r4]
 496 007c 22AB     		add	r3, sp, #136
 497 007e 0FCB     		ldm	r3, {r0, r1, r2, r3}
 498 0080 FFF7FEFF 		bl	sfl_can_db_tables_data_init_baudrate
 499 0084 33A9     		add	r1, sp, #204
 500 0086 0120     		movs	r0, #1
 501 0088 FFF7FEFF 		bl	sfl_can_get_handle
 502 008c 524B     		ldr	r3, .L61+4
 503 008e 03F12704 		add	r4, r3, #39
 504 0092 0DAE     		add	r6, sp, #52
 505 0094 03F1470C 		add	ip, r3, #71
 506              	.L48:
 507 0098 3546     		mov	r5, r6
 508 009a 2068     		ldr	r0, [r4]	@ unaligned
 509 009c 6168     		ldr	r1, [r4, #4]	@ unaligned
 510 009e A268     		ldr	r2, [r4, #8]	@ unaligned
 511 00a0 E368     		ldr	r3, [r4, #12]	@ unaligned
 512 00a2 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 513 00a4 1034     		adds	r4, r4, #16
 514 00a6 2E46     		mov	r6, r5
 515 00a8 6445     		cmp	r4, ip
 516 00aa F5D1     		bne	.L48
 517 00ac 2068     		ldr	r0, [r4]	@ unaligned
 518 00ae 2860     		str	r0, [r5]
 519 00b0 A288     		ldrh	r2, [r4, #4]	@ unaligned
 520 00b2 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 521 00b4 AA80     		strh	r2, [r5, #4]	@ unaligned
 522 00b6 AB71     		strb	r3, [r5, #6]
 523 00b8 6C46     		mov	r4, sp
 524 00ba 37AD     		add	r5, sp, #220
 525 00bc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 526 00be 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 527 00c0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 528 00c2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 529 00c4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 530 00c6 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 531 00c8 2B68     		ldr	r3, [r5]
 532 00ca 2360     		str	r3, [r4]
 533 00cc 33AB     		add	r3, sp, #204
 534 00ce 0FCB     		ldm	r3, {r0, r1, r2, r3}
 535 00d0 FFF7FEFF 		bl	sfl_can_db_tables_data_init_baudrate
 536 00d4 9BE7     		b	.L46
 537              	.L52:
 538 00d6 04EB840B 		add	fp, r4, r4, lsl #2
 539 00da C4EBCB0B 		rsb	fp, r4, fp, lsl #3
 540 00de 16F80B30 		ldrb	r3, [r6, fp]	@ zero_extendqisi2
 541 00e2 0121     		movs	r1, #1
 542 00e4 37F82300 		ldrh	r0, [r7, r3, lsl #2]
 543 00e8 FFF7FEFF 		bl	hal_io_do_set
 544 00ec 16F80B30 		ldrb	r3, [r6, fp]	@ zero_extendqisi2
 545 00f0 07EB8303 		add	r3, r7, r3, lsl #2
 546 00f4 0121     		movs	r1, #1
 547 00f6 5888     		ldrh	r0, [r3, #2]
 548 00f8 FFF7FEFF 		bl	hal_io_do_set
 549 00fc 374B     		ldr	r3, .L61+8
 550 00fe 2B61     		str	r3, [r5, #16]
 551              	.L50:
 552 0100 0021     		movs	r1, #0
 553 0102 5046     		mov	r0, r10
 554 0104 FFF7FEFF 		bl	hal_can_set_receive_callback
 555 0108 CAF81480 		str	r8, [r10, #20]
 556 010c 0021     		movs	r1, #0
 557 010e 5046     		mov	r0, r10
 558 0110 FFF7FEFF 		bl	hal_can_set_error_callback
 559              	.L49:
 560 0114 0134     		adds	r4, r4, #1
 561 0116 4435     		adds	r5, r5, #68
 562 0118 022C     		cmp	r4, #2
 563 011a 57D0     		beq	.L60
 564              	.L54:
 565 011c 04EB8403 		add	r3, r4, r4, lsl #2
 566 0120 C4EBC303 		rsb	r3, r4, r3, lsl #3
 567 0124 F118     		adds	r1, r6, r3
 568 0126 F35C     		ldrb	r3, [r6, r3]	@ zero_extendqisi2
 569 0128 AA46     		mov	r10, r5
 570 012a 6B60     		str	r3, [r5, #4]
 571 012c 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 572 012e DBB2     		uxtb	r3, r3
 573 0130 012B     		cmp	r3, #1
 574 0132 EFD1     		bne	.L49
 575 0134 04EB8403 		add	r3, r4, r4, lsl #2
 576 0138 C4EBC303 		rsb	r3, r4, r3, lsl #3
 577 013c F35C     		ldrb	r3, [r6, r3]	@ zero_extendqisi2
 578 013e 37F82330 		ldrh	r3, [r7, r3, lsl #2]
 579 0142 7A2B     		cmp	r3, #122
 580 0144 DCD0     		beq	.L50
 581 0146 04EB8403 		add	r3, r4, r4, lsl #2
 582 014a C4EBC303 		rsb	r3, r4, r3, lsl #3
 583 014e F35C     		ldrb	r3, [r6, r3]	@ zero_extendqisi2
 584 0150 07EB8303 		add	r3, r7, r3, lsl #2
 585 0154 5B88     		ldrh	r3, [r3, #2]
 586 0156 7A2B     		cmp	r3, #122
 587 0158 D2D0     		beq	.L50
 588 015a 04EB8403 		add	r3, r4, r4, lsl #2
 589 015e C4EBC303 		rsb	r3, r4, r3, lsl #3
 590 0162 F35C     		ldrb	r3, [r6, r3]	@ zero_extendqisi2
 591 0164 DBB2     		uxtb	r3, r3
 592 0166 012B     		cmp	r3, #1
 593 0168 1AD0     		beq	.L51
 594 016a 59B2     		sxtb	r1, r3
 595 016c 0029     		cmp	r1, #0
 596 016e B2D0     		beq	.L52
 597 0170 022B     		cmp	r3, #2
 598 0172 C5D1     		bne	.L50
 599 0174 04EB840B 		add	fp, r4, r4, lsl #2
 600 0178 C4EBCB0B 		rsb	fp, r4, fp, lsl #3
 601 017c 16F80B30 		ldrb	r3, [r6, fp]	@ zero_extendqisi2
 602 0180 0121     		movs	r1, #1
 603 0182 37F82300 		ldrh	r0, [r7, r3, lsl #2]
 604 0186 FFF7FEFF 		bl	hal_io_do_set
 605 018a 16F80B30 		ldrb	r3, [r6, fp]	@ zero_extendqisi2
 606 018e 07EB8303 		add	r3, r7, r3, lsl #2
 607 0192 0121     		movs	r1, #1
 608 0194 5888     		ldrh	r0, [r3, #2]
 609 0196 FFF7FEFF 		bl	hal_io_do_set
 610 019a 114B     		ldr	r3, .L61+12
 611 019c 2B61     		str	r3, [r5, #16]
 612 019e AFE7     		b	.L50
 613              	.L51:
 614 01a0 04EB840B 		add	fp, r4, r4, lsl #2
 615 01a4 C4EBCB0B 		rsb	fp, r4, fp, lsl #3
 616 01a8 16F80B30 		ldrb	r3, [r6, fp]	@ zero_extendqisi2
 617 01ac 0121     		movs	r1, #1
 618 01ae 37F82300 		ldrh	r0, [r7, r3, lsl #2]
 619 01b2 FFF7FEFF 		bl	hal_io_do_set
 620 01b6 16F80B30 		ldrb	r3, [r6, fp]	@ zero_extendqisi2
 621 01ba 07EB8303 		add	r3, r7, r3, lsl #2
 622 01be 0121     		movs	r1, #1
 623 01c0 5888     		ldrh	r0, [r3, #2]
 624 01c2 FFF7FEFF 		bl	hal_io_do_set
 625 01c6 C5F81090 		str	r9, [r5, #16]
 626 01ca 99E7     		b	.L50
 627              	.L60:
 628 01cc 45B0     		add	sp, sp, #276
 629              		@ sp needed
 630 01ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 631              	.L62:
 632 01d2 00BF     		.align	2
 633              	.L61:
 634 01d4 00000000 		.word	.LANCHOR1
 635 01d8 00000000 		.word	can_bus_db_const
 636 01dc 00000000 		.word	CAN_Callback
 637 01e0 00000000 		.word	CAN3_Callback
 638 01e4 00000000 		.word	CAN_Callback_Error
 639 01e8 00000000 		.word	CAN2_Callback
 641              		.comm	can_error_handle,24,4
 642              		.section	.rodata
 643              		.align	2
 644              		.set	.LANCHOR0,. + 0
 645              	.LC0:
 646 0000 00400240 		.word	1073889280
 647 0004 00500240 		.word	1073893376
 648 0008 00B00240 		.word	1073917952
 649              		.section	.data.once.13181,"aw"
 650              		.set	.LANCHOR1,. + 0
 653              	once.13181:
 654 0000 01       		.byte	1
 655              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 8-2019-q3-update) 8.3.1 20190703 (release) [gc
